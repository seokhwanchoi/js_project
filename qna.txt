Promise 를 리턴했으면
then 으로 받으면 받은건 Promise

 await 해서 resolved 된 값을 얻어야


33 번의 result 는 result.constructor.name 으로 무엇이 나오는가 확인

readyState가 바뀔때마다 onReadyStateChange가 실행된다고 하니
xhr.response에 값이 할당되기 전에 이벤트 실행되서 null찍힌거

webapi(브라우저)로 실험하는 거랑 node로 실험하는 거는 다르다
브라우저에서는 xhr 을 require 하는것이 아니라 내장된 XMLHttpRequest 를 사용



https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState
여기서 value 0~4까지


xhr.send 이거랑 xhr.onreadystatechange 이것의 순서는
노드의 xhr2 의 경우 순서에 영향받는지는 테스트해보지 못했는데
브라우저의 WebAPI에서는
순서가 관련이 없다



xhr 이 전역적으로 정의된적이 테스트과정에서 여러번 반복되고 하는과정에서
크롬 브라우저 오염되고 꼬일 수있다
이럴 땐 크롬 새로 켜서 about:blank로 켜보기



 아까 테스트하셨던 페이지에 또 다른 어떤 코드가 실행되었을지 모르기 때문에


null 3번 호출되었던 이유.
=>
done 상태가 되지 않았을때 그때 xhr.response 를 참조해서 그런것으로 생각됨


 상태가
2일때 '' 
아직 응답 바디는 준비되지 않은 상황
그리고 3번을 거치면서 body 를 받고
4번이되면 완료가 되는구조


//import export 쓰기 위해서는
// 1. npm init -y    해서 npm 프로젝트 만들기
// 2. package.json에 "type": "module" 추가
// 3.  더이상  require 쓰지말고 import로 사용하면 된다.
//ex. var XMLHttpRequest = require("xhr2").XMLHttpRequest;
//를 import XMLHttpRequest from "xhr2"; 로 바꿔준다.